No way to temporarily disable ("comment out") actors
  Bugzilla: http://bugzilla.ecoinformatics.org/show_bug.cgi?id=2921
  Given long-running nature of pipeline components, a means of disabling some and testing others in isolation is essential
    Easily done in shell script
    Yet seems impossible in Kepler
    One can, of course, test shell scripts manually, outside Kepler
      But then must provide two code paths -- inputs when run from Kepler, and inputs when run standalone

No way (at least so far as I can see) to rename already-created workflow
  Mine is permanently named "chip," at least according to title displayed for Kepler window

Clicking red stop button in Kepler won't always stop external processes that are in midst of execution
  For example, clicking stop won't kill meme -- I must manually kill process to stop workflow

Zip-based KAR format makes seeing what has changed since last commit via "git diff" impossible
  If underlying XML were more easily exposed, one could at least get a sense of what has changed in this revision

When documenting workflows by adding annotations, no easy way to align annotations with each other
  I have a bunch of bullet points beneath one annotation
    I must manually space them both horizontally and vertically; even then, no way to get proper alignment -- always off by a few pixels

If I have a variable in a path to a file parameter, and I use "Browse" button to select a new file that is located underneath directory specified by variable, the variable is not reused, but instead whole path is replaced by an absolute path

Mouse scroll wheel doesn't pan, but zooms
  Should pan by default, with Ctrl making it zoom

When I directed output of an RExpression actor to the "string" input of a text file writer, both the script's output *and* the script's source were written to the file

Too much of the interface is mouse-driven -- impossible to navigate efficiently using keyboard shortcuts

While Kepler was executing a workflow, I tried to access documentation for a component by right-clicking it on the canvas and choosing Documentation > Display. This caused Kepler to lock up

Interacting with the file picker (e.g., the one you receive by clicking File > Open) is frustrating -- no doubt due to Java's general badness
  Scrolling horizontally to see all available files causes massive graphical corruption in the file listing display, such that file names can no longer be read
    I must single-click on a file to cause the display to be redrawn, which resolves the corruption
  If I single-click on a file to select it, then double-click in an attempt to open it, the file is not opened
    Instead, the file enters the "rename" state, such that I must cilck outside it to cancel this, click on another file, then double-click the original file I intended to open

At times, the ability to view documentation for components by right-clicking on canvas entities and selecting Documentation > Display stopped working
  Restarting Kepler would fix this

External command execution is not terribly platform agnostic
  Actor references "sh" on UNIX, "cmd" on Windows -- how easily will workflows transfer between platforms?
